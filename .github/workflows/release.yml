name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
    
    - name: Extract version from tag
      id: version
      run: |
        $tag = "${{ github.ref }}" -replace 'refs/tags/', ''
        $version = $tag -replace '^v', ''
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "TAG=$tag" >> $env:GITHUB_OUTPUT
        Write-Host "Extracted version: $version from tag: $tag"
      shell: pwsh
    
    - name: Update plugin.json version
      run: |
        $pluginJson = Get-Content "SonarrFlowLauncherPlugin/plugin.json" | ConvertFrom-Json
        $pluginJson.Version = "${{ steps.version.outputs.VERSION }}"
        $pluginJson | ConvertTo-Json -Depth 10 | Set-Content "SonarrFlowLauncherPlugin/plugin.json"
        Write-Host "Updated plugin.json version to: ${{ steps.version.outputs.VERSION }}"
      shell: pwsh
    
    - name: Restore dependencies
      run: dotnet restore SonarrFlowLauncherPlugin/SonarrFlowLauncherPlugin.csproj
    
    - name: Build
      run: dotnet build SonarrFlowLauncherPlugin/SonarrFlowLauncherPlugin.csproj --configuration Release --no-restore
    
    - name: Create plugin package
      run: |
        $version = "${{ steps.version.outputs.VERSION }}"
        $pluginDir = "SonarrFlowLauncher-$version"
        New-Item -ItemType Directory -Path $pluginDir -Force
        
        # Copy main plugin files from correct path
        Copy-Item "SonarrFlowLauncherPlugin/bin/Release/*" $pluginDir -Recurse -Force
        
        # Ensure plugin.json is in the root (with updated version)
        Copy-Item "SonarrFlowLauncherPlugin/plugin.json" $pluginDir -Force
        
        # Include README for users
        Copy-Item "README.md" $pluginDir -Force
        
        # Copy Images folder
        Copy-Item "SonarrFlowLauncherPlugin/Images" $pluginDir -Recurse -Force
        
        # Create zip with version in name
        Compress-Archive -Path $pluginDir -DestinationPath "SonarrFlowLauncher-$version.zip"
        
        # Also create zip without version for latest download link
        Compress-Archive -Path $pluginDir -DestinationPath "SonarrFlowLauncher.zip"
        
        Write-Host "Created packages: SonarrFlowLauncher-$version.zip and SonarrFlowLauncher.zip"
      shell: pwsh
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.TAG }}
        release_name: "Sonarr Explorer v${{ steps.version.outputs.VERSION }}"
        draft: false
        prerelease: false
        body: |
          ## Sonarr Flow Launcher Plugin v${{ steps.version.outputs.VERSION }}
          
          Control Sonarr directly from Flow Launcher!
          
          ### Features
          - üìÖ **Calendar View** (`snr -c`): View upcoming episodes
          - üìä **Activity Monitor** (`snr -a`): View downloads and history
          - üîç **Library Search** (`snr -l`): Search your series library
          
          ### New in this release
          - üî• **Hot-reloading settings** - No restart required when changing settings!
          - üêõ **Fixed series URLs** - Now opens correct Sonarr web pages
          - üöÄ **Improved build pipeline** - Better release packaging
          
          ### Installation
          Download and extract to your Flow Launcher plugins directory, or install via:
          ```
          pm install https://github.com/AtaraxyState/Sonarr-Explorer/releases/latest/download/SonarrFlowLauncher.zip
          ```
          
          ### Requirements
          - Flow Launcher
          - Sonarr instance with API access
    
    - name: Upload Versioned Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./SonarrFlowLauncher-${{ steps.version.outputs.VERSION }}.zip
        asset_name: SonarrFlowLauncher-${{ steps.version.outputs.VERSION }}.zip
        asset_content_type: application/zip
    
    - name: Upload Latest Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./SonarrFlowLauncher.zip
        asset_name: SonarrFlowLauncher.zip
        asset_content_type: application/zip 